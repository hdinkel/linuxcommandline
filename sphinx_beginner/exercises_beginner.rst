.. Do not edit this file directly!
   ALways copy over the solutions file and remove the solutions
   This way it is assured that exercises and solutions are in sync

Exercises
=========

Misc. file tools
----------------

#. Which tool can be used to determine the type of a file? 

#. Use it on the following files/directories and compare the results:

   A. ``/usr/bin/tail`` 

   B. ``~`` 

   C. ``~/exercises/SRC_HUMAN.fasta`` 


Searching
---------
#. Which tool can be used to search for files or directories? 

#. Use it to find all directories in the ``~/exercises`` directory 

#. Search for the file date in the ``/bin`` directory 

#. List those entries in the directory ``/bin`` that are bigger than 400kBytes 


Misc. terminal
--------------
#. Which two tools can be used to redraw/empty the screen? 


Permissions
-----------

#. Create a directory called testpermissions 

#. Change your working directory to testpermissions 

#. Create a directory called adir. 

#. Use the command ``which date`` to find out where the date program is located. 

#. Copy this date program into the directory adir and name it 'mydate'. 

#. Check the permissions of the copied program 'mydate' 

#. Change the permissions on 'mydate' to remove the executable permissions. 

#. Check the permissions of the program 'mydate' 

#. Change the permissions back so that the file is executable. 

#. Try running it as ``./mydate`` or ``adir/mydate`` (depending on your current working directory) 

#. Copy a textfile from a previos exercise into adir, then change the permissions, so you are not allowed to write to it. Test this by trying to read it via `cat`. 

#. Then change the permissions so you can't read/cat it either. Test this by trying to read it via `cat`. 

#. Change your working directory to testpermissions, and then try changing the permissions on the directory adir to non-executable. 

#. What are the minimum permissions (on the directory) necessary for you to be able to execute ``adir/mydate``? 


Remote access
-------------
#. Login to machine "sub-master.embl.de" (using your own username) 

#. Use exit to quit the remote shell (Beware to not exit your local shell) 

#. Use clear to empty the screen after logout from the remote server 

#. Use the following commands locally as well as on the remote machine to get a feeling for the different machines: 

#. Copy the file ``/etc/motd`` from machine sub-master.embl.de into your local home directory (using scp) 

#. Determine the filetype and the permissions of the file that you just copied 

#. Login to your neighbor's machine (ask him for the hostname) using your own username 


IO and Redirections
-------------------
#. Use date in conjunction with the redirection to insert the current date into the (new) file current_date (in your homedirectory). 

#. Inspect the file to make sure it contains (only a single line with) the date. 

#. Use ``date`` again to append the current date into the same file. 

#. Again, check that this file now contains two lines with dates. 

#. Use ``grep`` to filter out lines containing the term "TITLE" from all PDB files in the exercises directory and use redirection to insert them into a new file pdb_titles.txt. 

#. (OPTIONAL) Upon inspection of the file pdb_titles.txt, you see that it also contains the names of the files in which the term was found. 

   A. Use either the grep manpage or ``grep --help`` to find out how you can suppress this behaviour.  

   B. Redo the previous exercise such that the output file pdb_titles.txt only contains lines starting with TITLE. 

#. The *third* column of the file /etc/passwd contains user IDs (numbers)

   A. Use `cut` to extract just the third column of this file (remember to specify the delimiter ':')

   B. Next, use the :ref:`pipe <pipe>` symbol (`|`) and `sort` to sort this output *numerically*


Bioinformatics
--------------

Let's do some bioinformatics analyis!
You can find the famous BLAST tool installed at `/g/software/bin/blastp`.

#. Typing the full path is too cumbersome, so let's append `/g/software/bin` to your $PATH variable and ensure that it works by calling `blastp`.

#. When you run `blastp  -help`, you notice that it has a lot of options! 
   Use redirections in conjunction with grep to find out which options you need to specify a *input_file* and *database_name*.

#. Now run blastp using the following values as options: 

   *database_name* = `/g/data/ncbi-blast/db/swissprot` 

   *input_file* = `suspect1.fasta` 
   
